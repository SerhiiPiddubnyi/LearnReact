{"version":3,"sources":["components/users/Users.module.css","assets/images/loader.gif","components/profile/myPosts/MyPosts.module.css","components/profile/myPosts/post/Post.module.css","components/navbar/Navbar.module.css","serviceWorker.js","components/navbar/Navbar.jsx","Redux/dialogs-reduer.js","components/dialogs/messageItem/MesageItem.jsx","components/dialogs/dialogItem/DialogItem.jsx","components/common/formsControl/FormsControl.js","utils/validators/Validators.js","components/dialogs/MessageForm.jsx","components/dialogs/Dialogs.jsx","hoc/WithAuthRedirect.jsx","components/dialogs/DialogsContainer.jsx","api/Api.js","Redux/users-reducer.js","components/users/Paginator.jsx","components/users/User.jsx","components/users/Users.jsx","components/common/Preloader.js","Redux/users-selectors.js","components/users/UsersContainer.jsx","components/profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/profile/ProfileInfo/ProfileInfoDataForm.js","components/profile/ProfileInfo/ProfileInfo.jsx","Redux/profile-reducer.js","components/profile/myPosts/post/Post.jsx","components/profile/myPosts/NewPostsForm.jsx","components/profile/myPosts/MyPosts.jsx","components/profile/myPosts/MyPostsContainer.jsx","components/profile/Profile.jsx","components/profile/ProfileContainer.jsx","components/header/Header.jsx","Redux/auth-reducer.js","components/header/HeaderContainer.jsx","components/login/Login.jsx","Redux/app-reducer.js","Redux/redux-store.js","hoc/WithSuspense.jsx","App.js","index.js","components/dialogs/Dialogs.module.css","components/common/formsControl/FormsControl.module.css","components/profile/ProfileInfo/ProfileInfo.module.css","assets/images/user.png","components/users/Paginator.module.css","components/header/Header.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","Navbar","className","style","nav","item","to","activeClassName","active","instalState","dialogs","id","name","messages","message","dialogsReducer","state","action","type","text","MessageItem","props","dialog","DialogItem","Element","input","meta","hasError","touched","error","formControl","createField","placeholder","validators","element","Field","validate","component","requiredField","value","length","maxLengthCreator","maxLength","maxLength10","Textarea","MessageReduxForm","reduxForm","form","onSubmit","handleSubmit","MessageForm","addMessage","Dialogs","dialogsElements","dialogsPage","map","key","messagesElements","dialogsItems","mapStateToPropsForRedirect","isAuth","auth","compose","connect","dispatch","addMessageActionCreator","Component","RedirectComponent","this","React","instanceAPI","axios","withCredentials","baseURL","headers","UsersAPI","currentPage","pageSize","get","then","responce","data","FollowAPI","userId","post","delete","AuthAPI","email","password","rememberMe","ProfileAPI","userData","put","status","photo","formData","FormData","append","initialState","users","totalUsersCount","isFetching","followingProgress","followingSuccess","setCurrentPage","toggleIsFetching","isFething","toggleIsFetchingFollow","usersReducer","user","followed","filter","Paginator","onPageChanged","firstPage","lastPage","pagesCount","Math","ceil","pages","i","push","ButtonToStart","onClick","ButtonToEnd","styles","paginatorComment","page","selectedPage","allPages","User","following","src","photos","small","userPhoto","disabled","some","Users","Preloader","preloader","getUsers","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingProgress","UsersComponent","setUsersCreator","a","items","totalCount","resultCode","ProfileStatusWithHooks","useState","editMode","setEditMode","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","ProfileInfoDataFormReduxForm","userProfile","Input","deckriptionBlock","styleFormControl","formSummaryError","Object","keys","contacts","ProfileInfoData","isOwner","goToEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contaktInfo","Contact","contactInfo","contact","ProfileInfo","addMainPhoto","saveProfile","getUserProfile","userPic","target","files","initialValues","ADD_POST","DEL_POST","posts","likesCount","profileReducer","newPost","p","postID","Post","NewReduxPostsForm","NewPostForm","addPost","MyPosts","memo","postsElements","profilePage","postsBlock","MyPostsContainer","addPostActionCreator","Profile","ProfileContainer","params","authorizedUserId","history","getStatus","refreshProfile","prevProps","prevState","snapshot","getState","getWrongField","position","indexOf","substring","toLowerCase","wrongField","stopSubmit","Promise","reject","withRouter","Header","header","loginBlock","login","logout","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","maxLength20","LoginReduxForm","_error","initialized","appReducer","reducers","combineReducers","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","withSuspense","fallback","News","lazy","Setting","Video","App","initializeApp","path","render","DialogsContainer","UsersContainer","ContainerApp","promiseGetUserData","all","MainApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.63e312e8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__3zvLU\"};","module.exports = __webpack_public_path__ + \"static/media/loader.dd50b232.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__22zhR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__euHzL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2Q4Lm\",\"item\":\"Navbar_item__3Iueq\",\"active\":\"Navbar_active__FhkBw\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached profile has been fetched,\n              // but the previous service worker will still serve the older\n              // profile until all client tabs are closed.\n              console.log(\n                'New profile is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"NewPost is cached for offline use.\" messageItem.\n              console.log('NewPost is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport style from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () =>{\r\n    return(\r\n        <nav className={style.nav}>\r\n            <div className= {style.item} >\r\n                <NavLink to=\"/profile\" activeClassName= {style.active}>Profile</NavLink>\r\n            </div>\r\n            <div className= {style.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName= {style.active}>Messages</NavLink>\r\n            </div>\r\n            <div className= {style.item}>\r\n                <NavLink to=\"/users\" activeClassName= {style.active}>Users</NavLink>\r\n            </div>\r\n            <div className= {style.item}>\r\n                <NavLink to=\"/news\" activeClassName= {style.active}>News</NavLink>\r\n            </div>\r\n            <div className= {style.item}>\r\n                <NavLink to= \"/videos\" activeClassName= {style.active}>Videos</NavLink>\r\n            </div>\r\n            <div className= {style.item}>\r\n                <NavLink to= \"/setting\" activeClassName= {style.active}>Setting</NavLink>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport  default Navbar;","const ADD_MESSAGE = 'dialogs/ADD-MESSAGE';\r\n\r\nconst instalState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Vasya'},\r\n        {id: 2, name: 'Kasya'},\r\n        {id: 3, name: 'Ivasya'},\r\n        {id: 4, name: 'Tasya'},\r\n        {id: 5, name: 'Masya'},\r\n        {id: 6, name: 'Pasya'},\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi!'},\r\n        {id: 2, message: 'How are you?'},\r\n        {id: 3, message: 'I am fine!'},\r\n    ],\r\n}\r\n\r\nconst dialogsReducer = (state = instalState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, { id: 4, message: action.text,}]\r\n            }\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nexport let addMessageActionCreator = (text) => {\r\n    return {type: ADD_MESSAGE, text};\r\n}\r\n\r\nexport default dialogsReducer;","import React from \"react\";\r\nimport style from \"./../Dialogs.module.css\"\r\n\r\nconst MessageItem = (props) => {\r\n    return (\r\n        <div className={style.dialog}>{props.message}</div>\r\n    );\r\n}\r\n\r\nexport default MessageItem;\r\n","import React from \"react\";\r\nimport style from \"./../Dialogs.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={style.dialog + ' ' + style.active}>\r\n            <NavLink to={'/dialogs/' + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport  style from \"./FormsControl.module.css\"\r\nimport {Field} from \"redux-form\";\r\n\r\nexport const Element = Element => ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return(\r\n        <div className={style.formControl + \" \" + (hasError ? style.error : \"\")}>\r\n            <div>\r\n                <Element {...input} {...props}/>\r\n            </div>\r\n            { hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const createField = (placeholder, validators, element, name, props ={}, text, type=\"\") => {\r\n    return <div>\r\n        <Field\r\n               placeholder={placeholder}\r\n               validate={validators}\r\n               component = {element}\r\n               name = {name}\r\n               type={type}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n}","export  const requiredField = value => {\r\n    if (value && value.length > 0) return undefined\r\n    return \"This field is required\"\r\n}\r\n\r\nexport  const maxLengthCreator = maxLength => value => {\r\n    if (value && value.length > maxLength) return `Max length ${maxLength}`\r\n    return undefined\r\n\r\n}","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Element} from \"../common/formsControl/FormsControl\";\r\nimport {maxLengthCreator, requiredField} from \"../../utils/validators/Validators\";\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\nconst  Textarea = Element(\"textarea\")\r\n\r\nconst Form = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={\"Your message\"}\r\n                       validate={[requiredField, maxLength10]}\r\n                       component={Textarea}\r\n                       name = {\"text\"}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button >Send!</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst MessageReduxForm = reduxForm({\r\n    form : \"message\",\r\n}) (Form)\r\n\r\nconst MessageForm = (props) => {\r\n    const onSubmit = (message) => {\r\n        props.addMessage(message.text);\r\n    }\r\n\r\n    return <div>\r\n        <MessageReduxForm onSubmit = {onSubmit}/>\r\n    </div>\r\n}\r\nexport default MessageForm;\r\n","import React from \"react\";\r\nimport style from \"./Dialogs.module.css\"\r\nimport MessageItem from \"./messageItem/MesageItem\";\r\nimport DialogItem from \"./dialogItem/DialogItem\";\r\nimport MessageForm from \"./MessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogsElements = props.dialogsPage.dialogs.map(dialog => <DialogItem key={dialog.id}\r\n                                                                              name={dialog.name}\r\n                                                                              id={dialog.id}/>);\r\n    let messagesElements = props.dialogsPage.messages.map(message => <MessageItem key={message.id}\r\n                                                                                  message={message.message}/>)\r\n\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <div className={style.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={style.messages}>\r\n                {messagesElements}\r\n                <MessageForm {...props}/>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth ) {\r\n                return <Redirect to={\"/login\"}/>\r\n            }\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent)\r\n    return ConnectedRedirectComponent;\r\n}","import React from \"react\";\nimport {addMessageActionCreator, changeTextMessageActionCreator} from \"../../Redux/dialogs-reduer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../../hoc/WithAuthRedirect\";\nimport {compose} from \"redux\";\n\nlet mapStateToProps = (state) =>{\n    return{\n        dialogsPage: state.dialogsPage,\n    }\n}\nlet mapDispatchToProps = (dispatch) =>{\n    return{\n        addMessage: (text) => {\n            dispatch(addMessageActionCreator(text));\n        }\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect,\n)(Dialogs)\n\n","import * as axios from \"axios\";\r\n\r\nconst instanceAPI = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '62005d27-039f-4c86-85d5-445b3f38c01d'\r\n    }\r\n});\r\n\r\nexport const UsersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instanceAPI.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(responce => responce.data);\r\n    },\r\n}\r\n\r\nexport const FollowAPI = {\r\n    following(userId, type) {\r\n        if (type === \"follow\") {\r\n            return instanceAPI.post(`follow/${userId}`)\r\n                .then(responce => responce.data)\r\n        }\r\n\r\n        return instanceAPI.delete(`follow/${userId}`)\r\n            .then(responce => responce.data)\r\n    },\r\n}\r\n\r\nexport const AuthAPI = {\r\n    authMe() {\r\n        return instanceAPI\r\n            .get(`auth/me`)\r\n            .then(responce => {\r\n                return responce.data\r\n            });\r\n    },\r\n    login(email, password, rememberMe = null) {\r\n        return instanceAPI.post(`auth/login`, {email, password, rememberMe})\r\n            .then(responce => responce.data);\r\n    },\r\n    logout() {\r\n        return instanceAPI.delete(`auth/login`)\r\n            .then(responce => responce.data);\r\n    },\r\n}\r\n\r\nexport const ProfileAPI = {\r\n    getProfile(userId) {\r\n        return instanceAPI.get(`profile/${userId}`)\r\n            .then(responce => responce.data);\r\n    },\r\n\r\n    saveProfile(userData) {\r\n        return instanceAPI.put(`profile`,  userData)\r\n            .then(responce => responce.data);\r\n    },\r\n\r\n    getStatus(userId) {\r\n        return instanceAPI.get(`profile/status/${userId}`)\r\n            .then(responce => responce.data);\r\n    },\r\n\r\n    updateStatus(status) {\r\n        return instanceAPI.put(`profile/status`, {status: status})\r\n            .then(responce => responce.data);\r\n    },\r\n\r\n    savePhoto(photo) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photo)\r\n        return instanceAPI.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n            .then(responce => responce.data);\r\n    },\r\n\r\n}\r\n\r\n","import {FollowAPI, UsersAPI} from \"../api/Api\";\r\n\r\nconst FOLLOWING = 'users/FOLLOWING';\r\nconst SET_USERS = 'users/SET_USERS';\r\nconst SET_CURRENT_PAGE = 'users/SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'users/SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'users/TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FETCHING_FOLLOW = 'users/TOGGLE_IS_FETCHING_FOLLOW';\r\n\r\nconst initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingProgress: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOWING:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return {...user, followed: !user.followed}\r\n                    }\r\n                    return user;\r\n                })\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.totalUsersCount}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFething}\r\n        }\r\n        case TOGGLE_IS_FETCHING_FOLLOW: {\r\n            return {\r\n                ...state,\r\n                followingProgress: action.isFething\r\n                    ? [...state.followingProgress, action.userId]\r\n                    : state.followingProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport let followingSuccess = (userId) => {\r\n    return {type: FOLLOWING, userId}\r\n}\r\nexport let setUsers = (users) => {\r\n    return {type: SET_USERS, users}\r\n}\r\nexport let setCurrentPage = (currentPage) => {\r\n    return {type: SET_CURRENT_PAGE, currentPage}\r\n}\r\nexport let setTotalUsersCount = (totalUsersCount) => {\r\n    return {type: SET_TOTAL_USERS_COUNT, totalUsersCount}\r\n}\r\nexport let toggleIsFetching = (isFething) => {\r\n    return {type: TOGGLE_IS_FETCHING, isFething}\r\n}\r\nexport let toggleIsFetchingFollow = (isFething, userId) => {\r\n    return {type: TOGGLE_IS_FETCHING_FOLLOW, isFething, userId}\r\n}\r\n\r\nexport const setUsersCreator = (currentPage, pageSize) => async (dispatch) => {\r\n    dispatch(setCurrentPage(currentPage));\r\n    dispatch(toggleIsFetching(true));\r\n\r\n    const responce = await UsersAPI.getUsers(currentPage, pageSize)\r\n\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(responce.items));\r\n    dispatch(setTotalUsersCount(responce.totalCount));\r\n}\r\n\r\nexport const following = (userId, type) => async (dispatch) => {\r\n    dispatch(toggleIsFetchingFollow(true, userId));\r\n    const responce = await FollowAPI.following(userId, type)\r\n\r\n    if (responce.resultCode === 0) {\r\n        dispatch(followingSuccess(userId));\r\n    }\r\n    dispatch(toggleIsFetchingFollow(false, userId));\r\n}\r\n\r\nexport default usersReducer;","import React from \"react\";\r\nimport styles from \"./Paginator.module.css\"\r\n\r\nconst Paginator = ({totalUsersCount, pageSize, currentPage, onPageChanged}) => {\r\n    let firstPage = 0;\r\n    let lastPage = 0;\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize);\r\n    if (currentPage <= 6 || pagesCount < 12) {\r\n        firstPage = 1;\r\n        lastPage = (pagesCount < 12) ? pagesCount : 11;\r\n    } else {\r\n        firstPage = currentPage - 5;\r\n        lastPage = (currentPage + 5 < pagesCount) ? currentPage + 5 : pagesCount;\r\n    }\r\n    let pages = [];\r\n    for (let i = firstPage; i <= lastPage; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    const ButtonToStart = () => {\r\n        return <button onClick={() => {onPageChanged(1)}}>To start</button>\r\n    }\r\n\r\n    const ButtonToEnd = () => {\r\n        return <button onClick={() => {onPageChanged(pagesCount)}}>To end</button>\r\n    }\r\n\r\n    return <div className={styles.paginatorComment}>\r\n        {currentPage > 6 && <ButtonToStart />}\r\n        {pages.map(page => {\r\n            return <span>\r\n                <span className={currentPage === page ? styles.selectedPage : styles.allPages}\r\n                      onClick={() => {\r\n                          onPageChanged(page)\r\n                      }}>{page}</span>\r\n            </span>\r\n        })}\r\n        {currentPage + 5 < pagesCount && <ButtonToEnd />}\r\n    </div>\r\n\r\n}\r\n\r\nexport default Paginator;","import React from \"react\";\r\nimport styles from \"./Users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst User = ({user, followingProgress, following}) => {\r\n\r\n    return <div key={user.id}>\r\n            <span>\r\n                <div>\r\n                    <NavLink to = {'/profile/' + user.id}>\r\n                        <img src={user.photos.small\r\n                            ? user.photos.small\r\n                            : userPhoto} className={styles.userPhoto}/>\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {user.followed\r\n                        ? <button disabled={followingProgress.some(id => id === user.id)} onClick={() => {\r\n                            following(user.id, \"unfollow\");\r\n                        }}>Unfollow</button>\r\n                        : <button disabled={followingProgress.some(id => id === user.id)} onClick={() => {\r\n                            following(user.id, \"follow\");\r\n                        }}>Follow</button>\r\n                    }\r\n                </div>\r\n            </span>\r\n            <span>\r\n                <span>\r\n                    <div>{user.name}</div>\r\n                    <div>{user.status}</div>\r\n                </span>\r\n                <span>\r\n                    <div>{'user.location.country'}</div>\r\n                    <div>{'user.location.city'}</div>\r\n                </span>\r\n            </span>\r\n        </div>\r\n}\r\n\r\nexport default User;","import React from \"react\";\r\nimport Paginator from \"./Paginator\";\r\nimport User from \"./User\";\r\n\r\nconst Users = (props) => {\r\n\r\n    return <div>\r\n        <Paginator {...props}/>\r\n        {props.users.map(user => <User user={user}\r\n                                       followingProgress={props.followingProgress}\r\n                                       following={props.following}/>)}\r\n    </div>\r\n}\r\n\r\nexport default Users;","import preloader from \"../../assets/images/loader.gif\";\r\nimport React from \"react\";\r\n\r\nlet Preloader = (props) => {\r\n    return <div>\r\n        <img src={preloader}/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n   return  state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n   return users.filter(user => true);\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n   return  state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n   return  state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n   return  state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n   return  state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingProgress = (state) => {\r\n   return  state.usersPage.followingProgress;\r\n}\r\n\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    setUsersCreator, following,\r\n} from \"../../Redux/users-reducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../Redux/users-selectors\";\r\n\r\nclass UsersComponent extends React.Component {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.setUsersCreator(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (page) => {\r\n        const {pageSize} = this.props;\r\n        this.props.setUsersCreator(page, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n                <Users totalUsersCount={this.props.totalUsersCount}\r\n                       pageSize={this.props.pageSize}\r\n                       currentPage={this.props.currentPage}\r\n                       onPageChanged={this.onPageChanged}\r\n                       users={this.props.users}\r\n                       followingProgress = {this.props.followingProgress}\r\n                       following = {this.props.following}\r\n                />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingProgress: getFollowingProgress(state),\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { setUsersCreator, following, }),\r\n)(UsersComponent)\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n       setStatus( e.currentTarget.value);\r\n    };\r\n\r\n    return <div>\r\n        {!editMode &&\r\n        <div>\r\n            <span onDoubleClick={activateEditMode}>{props.status || \"No status(((\"}</span>\r\n        </div>}\r\n        { editMode &&\r\n        <div>\r\n            <input onChange={onStatusChange}\r\n                   autoFocus={true}\r\n                   onBlur={deactivateEditMode}\r\n                   value={status}\r\n                   />\r\n        </div>}\r\n    </div>;\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\"\r\nimport style from \"./ProfileInfo.module.css\";\r\nimport {createField, Element} from \"../../common/formsControl/FormsControl\";\r\nimport styleFormControl from \"../../common/formsControl/FormsControl.module.css\"\r\nimport {reduxForm} from \"redux-form\";\r\n\r\nconst ProfileInfoDataForm = ({ handleSubmit, userProfile, error}) => {\r\n    const Input = Element(\"input\");\r\n    const Textarea = Element(\"textarea\")\r\n    return <form className={style.deckriptionBlock} onSubmit={handleSubmit}>\r\n        <div>\r\n            <button>Save</button>\r\n        </div>\r\n        {error && <div className={styleFormControl.formSummaryError}>\r\n            {error}\r\n        </div>}\r\n        <div>\r\n            <b>Name:</b>{createField(\"Your name\", [],\r\n            Input, \"fullName\",)}\r\n        </div>\r\n        <div>\r\n            <b>Looking or a job:</b>{createField(\"\", [],\r\n            Input, \"lookingForAJob\", {}, \"\", \"checkbox\")}\r\n        </div>\r\n        <div>\r\n            <b>Skills:</b> {createField(\"Your skills\", [],\r\n            Textarea, \"lookingForAJobDescription\",)}\r\n        </div>\r\n        <div>\r\n            <b>About me:</b> {createField(\"Tell about you\", [],\r\n            Textarea, \"aboutMe\",)}\r\n        </div>\r\n        <div>\r\n            <b>Contacts:</b> {Object.keys(userProfile.contacts).map(key => {\r\n            return <div key={key}>\r\n                <b>{key}</b> {createField(`Your ${key}:`,[],\r\n                Input, `contacts.${key}`)}\r\n            </div>\r\n            })}\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileInfoDataFormReduxForm = reduxForm({form: \"profileInfo\"})(ProfileInfoDataForm)\r\n\r\nexport default ProfileInfoDataFormReduxForm","import style from \"./ProfileInfo.module.css\";\r\nimport React, {useState} from \"react\";\r\nimport Preloader from \"../../common/Preloader\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport ProfileInfoDataForm from \"./ProfileInfoDataForm\";\r\n\r\n\r\nconst ProfileInfo = ({userProfile, status, updateStatus, isOwner, addMainPhoto, saveProfile, getUserProfile}) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!userProfile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            addMainPhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (userData) => {\r\n        saveProfile(userData).then(()=>{\r\n            setEditMode(false)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <img className={style.userPic} src={userProfile.photos.small || userPhoto}/>\r\n            {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>}\r\n            <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            {editMode\r\n                ? <ProfileInfoDataForm initialValues={userProfile} onSubmit={onSubmit} userProfile={userProfile}/>\r\n                : <ProfileInfoData userProfile={userProfile}\r\n                                   isOwner={isOwner}\r\n                                   goToEditMode={() => {\r\n                                       setEditMode(true)\r\n                                   }}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileInfoData = ({userProfile, isOwner, goToEditMode}) => {\r\n    return <div className={style.deckriptionBlock}>\r\n        {isOwner && <div>\r\n            <button onClick={goToEditMode}>Edit</button>\r\n        </div>}\r\n        <div>\r\n            <div>{userProfile.fullName}</div>\r\n        </div>\r\n        <div>\r\n            <b>Looking or a job:</b> {userProfile.lookingForAJob ? \"yes\" : \"no\"}\r\n        </div>\r\n        <div>\r\n            <b>Skills:</b> {userProfile.lookingForAJobDescription}\r\n        </div>\r\n        <div>\r\n            <b>About me:</b> {userProfile.aboutMe}\r\n        </div>\r\n\r\n        <div>\r\n            <b>Contacts:</b> {Object.keys(userProfile.contacts).map(key => {\r\n            return <Contact key={key} contactTitle={key} contaktInfo={userProfile.contacts[key]}/>\r\n        })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport const Contact = ({contactTitle, contactInfo}) => {\r\n    return <div className={style.contact}><b>{`${contactTitle}: ${contactInfo || \"no\"}`}</b></div>\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import {ProfileAPI} from \"../api/Api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'profile/ADD-POST';\r\nconst SET_MAIN_PHOTO = 'profile/SET_MAIN_PHOTO';\r\nconst DEL_POST = 'profile/DEL-POST';\r\nconst SET_USER_PROFILE = 'profile/SET_USER_PROFILE';\r\nconst SET_STATUS = 'profile/SET_STATUS';\r\n\r\nconst initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi! how are you', likesCount: 4,},\r\n        {id: 2, message: 'It\\'s my first post.', likesCount: 18,}\r\n    ],\r\n    userProfile: null,\r\n    status: \"\",\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 3,\r\n                message: action.text,\r\n                likesCount: 1,\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            };\r\n        }\r\n        case DEL_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id !== action.postID),\r\n            };\r\n        }\r\n\r\n        case SET_USER_PROFILE : {\r\n            return {\r\n                ...state,\r\n                userProfile: action.userProfile,\r\n            };\r\n        }\r\n\r\n        case SET_STATUS : {\r\n            return {\r\n                ...state,\r\n                status: action.status,\r\n            };\r\n        }\r\n\r\n        case SET_MAIN_PHOTO : {\r\n            return {\r\n                ...state,\r\n                userProfile: {...state.userProfile, photos: action.photos}\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport let addPostActionCreator = (text) => {\r\n    return {type: ADD_POST, text}\r\n}\r\n\r\nexport let setMainPhotoActionCreator = (photos) => {\r\n    return {type: SET_MAIN_PHOTO, photos}\r\n}\r\n\r\nexport let deletePostActionCreator = (postID) => {\r\n    return {type: DEL_POST, postID}\r\n}\r\n\r\nexport let setUserProfile = (userProfile) => {\r\n    return {type: SET_USER_PROFILE, userProfile}\r\n}\r\n\r\nexport let setStatus = (status) => {\r\n    return {type: SET_STATUS, status}\r\n}\r\n\r\nexport let getUserProfile = (userId) => async (dispatch) => {\r\n    const responce = await ProfileAPI.getProfile(userId)\r\n    dispatch(setUserProfile(responce))\r\n}\r\n\r\nexport let getStatus = (userId) => async (dispatch) => {\r\n    const responce = await ProfileAPI.getStatus(userId)\r\n    dispatch(setStatus(responce))\r\n}\r\n\r\nexport let updateStatus = (status) => async (dispatch) => {\r\n    const responce = await ProfileAPI.updateStatus(status)\r\n    if (responce.resultCode === 0)\r\n        dispatch(setStatus(status))\r\n}\r\n\r\nexport let addMainPhoto = (photo) => async (dispatch) => {\r\n    const responce = await ProfileAPI.savePhoto(photo)\r\n    if (responce.resultCode === 0)\r\n        dispatch(setMainPhotoActionCreator(responce.data.photos))\r\n}\r\n\r\nexport let saveProfile = (userData) => async (dispatch, getState) => {\r\n    const userId = getState().auth.id;\r\n    const responce = await ProfileAPI.saveProfile(userData)\r\n    let message = responce.messages.length > 0 ? responce.messages[0] : \"Some error\";\r\n    const getWrongField = (message) => {\r\n        const position = message.indexOf(\"Contacts->\");\r\n        if (position >= 0){\r\n            return message.substring(position + 10, message.length - 1).toLowerCase()\r\n        }\r\n    }\r\n\r\n    if (responce.resultCode === 0){\r\n        dispatch(getUserProfile(userId))\r\n    }else {\r\n        const wrongField  = getWrongField(message)\r\n        dispatch(stopSubmit(\"profileInfo\", {\"contacts\": {[wrongField] : `${wrongField} contact is incorrect`}}))\r\n        return Promise.reject(message)\r\n    }\r\n\r\n}\r\n\r\nexport default profileReducer;","import React from \"react\";\r\nimport style from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n    return (\r\n        <div className={style.item}>\r\n            <img src='https://5koleso.ru/wp-content/uploads/2020/01/mercedes-benz-vision_avtr_concept-2020-1280-03-1024x768.jpg'/>\r\n            {props.message}\r\n            <div>\r\n                <button>Like</button> {props.likesCount}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, requiredField} from \"../../../utils/validators/Validators\";\r\nimport {Element} from \"../../common/formsControl/FormsControl\";\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\nconst  Textarea = Element(\"textarea\")\r\n\r\nconst PostsForm = (props) => {\r\n    return (\r\n            <form onSubmit={props.handleSubmit}>\r\n                <div>\r\n                    <Field placeholder={\"Your post\"}\r\n                           component={Textarea}\r\n                           name = {\"text\"}\r\n                           validate={[requiredField, maxLength10]}/>\r\n                </div>\r\n                <div>\r\n                    <button >Add post</button>\r\n                </div>\r\n            </form>\r\n    );\r\n}\r\n\r\nconst NewReduxPostsForm = reduxForm({\r\n    form: \"post\",\r\n})(PostsForm)\r\n\r\nconst NewPostForm = (props) => {\r\n    const onSubmit = (post) => {\r\n        props.addPost(post.text);\r\n    }\r\n\r\n    return <div>\r\n        <NewReduxPostsForm onSubmit = {onSubmit}/>\r\n    </div>\r\n}\r\n\r\nexport default NewPostForm;","import React from \"react\";\r\nimport style from './MyPosts.module.css';\r\nimport Post from \"./post/Post\";\r\nimport NewPostForm from \"./NewPostsForm\";\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    let postsElements = props.profilePage.posts.map(post => <Post key={post.id}\r\n                                                                  message={post.message}\r\n                                                                  likesCount={post.likesCount}/>)\r\n\r\n    return (\r\n        <div className={style.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <NewPostForm {...props}/>\r\n            {postsElements}\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default MyPosts;","import React from \"react\";\nimport {addPostActionCreator} from \"../../../Redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToProps = (state) =>{\n    return{\n        profilePage: state.profilePage,\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return{\n        addPost: (text) =>{\n            dispatch(addPostActionCreator(text));\n        }\n    }\n}\n\nconst MyPostsContainer = connect (mapStateToProps, mapDispatchToProps) (MyPosts);\n\nexport default MyPostsContainer;","import React from \"react\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./myPosts/MyPostsContainer\";\nimport {Redirect} from \"react-router-dom\";\nimport {updateStatus} from \"../../Redux/profile-reducer\";\n\nconst Profile = (props) =>{\n\n    return(\n        <div>\n            <ProfileInfo userProfile = {props.userProfile}\n                         addMainPhoto = {props.addMainPhoto}\n                         status = {props.status}\n                         updateStatus = {props.updateStatus}\n                         isOwner = {props.isOwner}\n                         saveProfile = {props.saveProfile}\n            />\n            <MyPostsContainer />\n        </div>\n    );\n}\n\nexport  default Profile;","import React from \"react\";\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {addMainPhoto, getStatus, getUserProfile, saveProfile, updateStatus} from \"../../Redux/profile-reducer\";\nimport {withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\n\nclass ProfileContainer extends React.Component {\n\n    refreshProfile() {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = this.props.authorizedUserId;\n            if (!userId) {\n                this.props.history.push(\"/login\")\n            }\n        }\n        this.props.getUserProfile(userId);\n        this.props.getStatus(userId);\n    }\n\n    componentDidMount() {\n        this.refreshProfile();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.match.params.userId !== this.props.match.params.userId)\n            this.refreshProfile();\n    }\n\n    render() {\n        return <Profile {...this.props}\n                        isOwner = {!this.props.match.params.userId}\n                        userProfile={this.props.userProfile}\n                        status={this.props.status}\n                        updateStatus={this.props.updateStatus}\n                        addMainPhoto = {this.props.addMainPhoto}\n        />\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    userProfile: state.profilePage.userProfile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.id,\n    isAuth: state.auth.isAuth,\n})\n\nexport default compose(\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, addMainPhoto, saveProfile}),\n    withRouter,\n)(ProfileContainer)\n","import React from \"react\";\r\nimport style from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) =>{\r\n    return(\r\n        <header className={style.header}>\r\n            <img src='https://s2.logaster.com/static/v3/img/products/logo.png'/>\r\n            <div className={style.loginBlock}>\r\n                {props.isAuth\r\n                    ? <div>{props.login} - <button onClick={props.logout}>Logout</button></div>\r\n                    : <NavLink to={'/login'}>Login</NavLink> }\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport  default Header;","import {AuthAPI} from \"../api/Api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'auth/SET_USER_DATA';\r\n\r\nconst initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    isFetching: false,\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport let setAuthUserData = (id, email, login, isAuth) => {\r\n    return {type: SET_USER_DATA, payload: {id, email, login, isAuth}}\r\n}\r\n\r\nexport let getAuthUserData = () => async (dispatch) => {\r\n    const responce = await AuthAPI.authMe()\r\n    if (responce.resultCode === 0) {\r\n        let {id, email, login} = responce.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport let login = (email, password, rememberMe) => async (dispatch) => {\r\n    const responce = await AuthAPI.login(email, password, rememberMe)\r\n\r\n    if (responce.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        let message = responce.messages.length > 0 ? responce.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}))\r\n    }\r\n}\r\nexport let logout = () => async (dispatch) => {\r\n    const responce = await AuthAPI.logout()\r\n    if (responce.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\n\r\nexport default authReducer;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport * as axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../Redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render(){\r\n        return <Header {...this.props}/>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ( {\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n} )\r\n\r\nexport  default connect (mapStateToProps, {logout})(HeaderContainer);","import React from \"react\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {createField, Element} from \"../common/formsControl/FormsControl\";\r\nimport {maxLengthCreator, requiredField} from \"../../utils/validators/Validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../Redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"../common/formsControl/FormsControl.module.css\"\r\n\r\nconst Input = Element(\"input\")\r\nconst maxLength20 = maxLengthCreator(20)\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(\"Email\", [requiredField, maxLength20],\r\n                Input, \"email\")}\r\n            {createField(\"Password\", [requiredField, maxLength20],\r\n                Input, \"password\", {}, \"\", \"password\")}\r\n            {createField(\"RememberMe\", [],\r\n                Input, \"rememberMe\", {}, \"Remember me\",\"checkbox\")}\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) =>{\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth){\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit = {onSubmit}/>\r\n    </div>\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport default connect (mapStateToProps, { login }) (Login);","import {AuthAPI} from \"../api/Api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'app/INITIALIZED_SUCCESS';\r\n\r\nconst initialState = {\r\n    initialized: false,\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport let initializedSuccess = () => {\r\n    return {type: INITIALIZED_SUCCESS}\r\n}\r\n\r\nexport let initializeApp = () => {\r\n    return (dispatch) => {\r\n        let promiseGetUserData = dispatch(getAuthUserData())\r\n        Promise.all([promiseGetUserData])\r\n            .then(() => {\r\n            dispatch(initializedSuccess())\r\n        })\r\n    }\r\n}\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reduer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage : profileReducer,\r\n    dialogsPage : dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers,  composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n\r\nwindow.store = store;\r\n\r\nexport  default store;","import React, {Suspense} from \"react\";\r\nimport Preloader from \"../components/common/Preloader\";\r\n\r\nconst withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <Suspense fallback={<Preloader/>}>\r\n            <Component {...props}/>\r\n        </Suspense>\r\n    }\r\n}\r\nexport default withSuspense;","import React from 'react';\nimport './App.css';\nimport Navbar from \"./components/navbar/Navbar\";\nimport {HashRouter, Route, withRouter} from \"react-router-dom\";\nimport DialogsContainer from \"./components/dialogs/DialogsContainer\";\nimport UsersContainer from \"./components/users/UsersContainer\";\nimport ProfileContainer from \"./components/profile/ProfileContainer\";\nimport HeaderContainer from \"./components/header/HeaderContainer\";\nimport Login from \"./components/login/Login\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./Redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader\";\nimport store from \"./Redux/redux-store\";\nimport withSuspense from \"./hoc/WithSuspense\";\n\nconst News = React.lazy(() => import(\"./components/news/News\"))\nconst Setting = React.lazy(() => import(\"./components/setting/Setting\"))\nconst Video = React.lazy(() => import(\"./components/videos/Videos\"))\n// import News from \"./components/news/News\";\n// import Setting from \"./components/setting/Setting\";\n// import Videos from \"./components/videos/Videos\"\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n                    <Route path=\"/profile/:userId?\"\n                           render={() => <ProfileContainer/>}/>\n                    <Route path=\"/dialogs\"\n                           render={() => <DialogsContainer/>}/>\n                    <Route path=\"/users\"\n                           render={() => <UsersContainer/>}/>\n                    <Route path=\"/login\"\n                           render={() => <Login/>}/>\n                    <Route path=\"/news\"\n                           render={withSuspense(News)}/>\n                    <Route path=\"/setting\"\n                           render={withSuspense(Setting)}/>\n                    <Route path=\"/videos\"\n                           render={withSuspense(Video)}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nconst ContainerApp = compose(\n    withRouter,\n    connect\n    (mapStateToProps, {initializeApp}))(App);\n\nconst MainApp = (props) => {\n    return <HashRouter>\n        <Provider store={store}>\n            <ContainerApp/>\n        </ Provider>\n    </HashRouter>;\n}\n\nexport default MainApp;","import React from 'react';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MainApp from \"./App\";\n\nReactDOM.render(\n    <MainApp />, document.getElementById('root')\n    );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__105iv\",\"dialogsItems\":\"Dialogs_dialogsItems__20dui\",\"dialog\":\"Dialogs_dialog__Y1nJ0\",\"active\":\"Dialogs_active__3xY94\",\"messages\":\"Dialogs_messages__2l-jP\",\"message\":\"Dialogs_message__1a79Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__2jLRp\",\"error\":\"FormsControl_error__3u6HW\",\"formSummaryError\":\"FormsControl_formSummaryError__1JgOO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imgHead\":\"ProfileInfo_imgHead__303V_\",\"deckriptionBlock\":\"ProfileInfo_deckriptionBlock__B2adT\",\"userPic\":\"ProfileInfo_userPic__sAHHu\",\"contact\":\"ProfileInfo_contact__226_3\"};","module.exports = __webpack_public_path__ + \"static/media/user.70914ad2.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__2bZmv\",\"allPages\":\"Paginator_allPages__2wRSW\",\"paginatorComment\":\"Paginator_paginatorComment__1qDqB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__XMb0Z\",\"loginBlock\":\"Header_loginBlock__2EoEo\"};"],"sourceRoot":""}